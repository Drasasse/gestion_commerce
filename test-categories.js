/**
 * Script de test pour la cr√©ation de cat√©gories
 * Test avec les comptes gestionnaires cr√©√©s dans seed.ts
 */

const BASE_URL = 'http://localhost:3000';

async function testCategoryCreation() {
  console.log('üß™ Test de cr√©ation de cat√©gories\n');

  // Test 1: Connexion gestionnaire
  console.log('1. Test de connexion gestionnaire...');
  try {
    const loginResponse = await fetch(`${BASE_URL}/api/auth/signin`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: 'fatou@demo.com',
        password: 'gest123'
      })
    });

    console.log('Status connexion:', loginResponse.status);
    console.log('Headers:', Object.fromEntries(loginResponse.headers.entries()));
    
    if (loginResponse.ok) {
      console.log('‚úÖ Connexion r√©ussie');
    } else {
      console.log('‚ùå √âchec de connexion');
      const errorText = await loginResponse.text();
      console.log('Erreur:', errorText);
    }
  } catch (error) {
    console.log('‚ùå Erreur de connexion:', error.message);
  }

  console.log('\n2. Test de r√©cup√©ration des cat√©gories...');
  try {
    const categoriesResponse = await fetch(`${BASE_URL}/api/categories`);
    console.log('Status cat√©gories:', categoriesResponse.status);
    
    if (categoriesResponse.ok) {
      const data = await categoriesResponse.json();
      console.log('‚úÖ Cat√©gories r√©cup√©r√©es:', data.categories?.length || 0);
    } else {
      console.log('‚ùå √âchec r√©cup√©ration cat√©gories');
      const errorText = await categoriesResponse.text();
      console.log('Erreur:', errorText);
    }
  } catch (error) {
    console.log('‚ùå Erreur r√©cup√©ration cat√©gories:', error.message);
  }

  console.log('\n3. Test de cr√©ation de cat√©gorie...');
  try {
    const createResponse = await fetch(`${BASE_URL}/api/categories`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        nom: 'Test Cat√©gorie ' + Date.now(),
        description: 'Cat√©gorie de test cr√©√©e automatiquement'
      })
    });

    console.log('Status cr√©ation:', createResponse.status);
    
    if (createResponse.ok) {
      const data = await createResponse.json();
      console.log('‚úÖ Cat√©gorie cr√©√©e:', data);
    } else {
      console.log('‚ùå √âchec cr√©ation cat√©gorie');
      const errorText = await createResponse.text();
      console.log('Erreur:', errorText);
    }
  } catch (error) {
    console.log('‚ùå Erreur cr√©ation cat√©gorie:', error.message);
  }

  console.log('\n4. Test d\'acc√®s √† la page cat√©gories...');
  try {
    const pageResponse = await fetch(`${BASE_URL}/boutique/categories`);
    console.log('Status page:', pageResponse.status);
    
    if (pageResponse.ok) {
      console.log('‚úÖ Page cat√©gories accessible');
    } else {
      console.log('‚ùå Page cat√©gories inaccessible');
    }
  } catch (error) {
    console.log('‚ùå Erreur acc√®s page:', error.message);
  }
}

// Ex√©cuter les tests
testCategoryCreation().catch(console.error);