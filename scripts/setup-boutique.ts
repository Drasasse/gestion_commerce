import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  console.log('=== Configuration de la boutique ===\n');

  try {
    // V√©rifier s'il y a d√©j√† des boutiques
    const boutiques = await prisma.boutique.findMany();
    console.log(`Boutiques existantes: ${boutiques.length}`);

    let boutique;
    if (boutiques.length === 0) {
      // Cr√©er une boutique par d√©faut
      boutique = await prisma.boutique.create({
        data: {
          nom: 'Ma Boutique',
          adresse: '123 Rue du Commerce',
          telephone: '+33 1 23 45 67 89',
          description: 'Boutique de d√©monstration'
        }
      });
      console.log('‚úÖ Boutique cr√©√©e:', boutique.nom);
    } else {
      boutique = boutiques[0];
      console.log('‚úÖ Boutique existante:', boutique.nom);
    }

    // V√©rifier et mettre √† jour l'utilisateur admin
    const adminUser = await prisma.user.findFirst({
      where: { role: 'ADMIN' }
    });

    if (adminUser && !adminUser.boutiqueId) {
      await prisma.user.update({
        where: { id: adminUser.id },
        data: { boutiqueId: boutique.id }
      });
      console.log('‚úÖ Utilisateur admin associ√© √† la boutique');
    } else if (adminUser) {
      console.log('‚úÖ Utilisateur admin d√©j√† associ√© √† une boutique');
    }

    // Cr√©er quelques cat√©gories de base si elles n'existent pas
    const categories = await prisma.categorie.findMany({
      where: { boutiqueId: boutique.id }
    });

    if (categories.length === 0) {
      await prisma.categorie.createMany({
        data: [
          { nom: '√âlectronique', description: 'Appareils √©lectroniques', boutiqueId: boutique.id },
          { nom: 'V√™tements', description: 'V√™tements et accessoires', boutiqueId: boutique.id },
          { nom: 'Alimentation', description: 'Produits alimentaires', boutiqueId: boutique.id }
        ]
      });
      console.log('‚úÖ Cat√©gories de base cr√©√©es');
    }

    console.log('\nüéâ Configuration termin√©e avec succ√®s!');
    console.log(`Boutique ID: ${boutique.id}`);

  } catch (error) {
    console.error('‚ùå Erreur:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

main();